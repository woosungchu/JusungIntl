<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	xmlns:mvc="http://www.springframework.org/schema/mvc">

	<!-- 서블릿 컨테이너 디폴트 서블릿 위임 핸들러 -->
	<!-- dispatcher servlet이 모든 요청을 처리하게 '/'로만 해놓으면 tomcat.conf.web.xml에 
       정의되어 있는 url-pattern "/"을 무시해버린다. 고로 정적 content(png,jpg,css)등의 타입들을 
       받지 못한다.-->
	<mvc:default-servlet-handler />
	 <!--에러 ! - SimpleUrlHandlerMapping  // 디폴트 핸들러 매핑인 
       DefaultAnnotationHandlerMapping이 처리해야 하는데 
       	왜 SimpleUrlHandlerMapping이 처리를 하게 된 것일까?
이유는 두 개 이상의 핸들러 매핑이 등록되었을 경우에는 디폴트 전략이 무시되기 때문에
annotation-driven 을 걸어 DefaultAnnotationHandlerMapping을 해줘야 한다.
 -->
	<!-- validator, conversionService, messageConverter, DefaultAnnotationHandlerMapping를 자동 -->
	<mvc:annotation-driven />
	
	<context:annotation-config />
	<context:component-scan base-package="com.bit.wsc.controller" />
	
 	
 	
	<!-- the mvc resources tag does the magic 파일업로드 처리3 -->
<!--  	<mvc:resources mapping="/product-images/**" location="file:\\192.168.1.9\temp\" /> -->

	<!-- jsonView -->
	<bean id="jsonView" class="com.bit.wsc.util.JsonView"/>

	<!-- beanNameViewResolver -->
	<bean id="beanNameViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order">
			<value>0</value>
		</property>
	</bean>

	<!-- 기본 뷰 리졸버 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- 메세지 컨버터 등록 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- 멀티파트 리졸버 파일업로드처리2-->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="314572800" />
		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<!-- property name="maxInMemorySize" value="52428800" /-->
		<!-- defaultEncoding -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>	
	
	<mvc:interceptors>  
		<!-- logger -->
		<mvc:interceptor>
			 <mvc:mapping path="/**"/>
            <bean id="loggerInterceptor" class="com.bit.wsc.util.LoggerInterceptor"></bean>
		</mvc:interceptor>
		<!-- locale Interceptor -->
        <bean  id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"></property>
        </bean>
	</mvc:interceptors>
	
	<!-- locale resolver -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
    
    <!-- MessageSource -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="WEB-INF/messages/messages"/>
        <property name="defaultEncoding" value="UTF-8" />
        <property name="cacheSeconds" value="180"/>
	</bean>
    
    
    
	
</beans>